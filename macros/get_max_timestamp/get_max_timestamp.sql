{% macro get_max_timestamp(timestamp_column='loaded_timestamp', predicate=none, warehouse_size='xs', model_name=this.name) %}

    {# Initialise macro context #}
    {% set macro_ctx = create_macro_context('get_max_timestamp') %}
    {% set macro_name = macro_ctx.macro_name %}
    {% set model_id = macro_ctx.model_id %}

    {# Input validation #}
    {% if not timestamp_column %}
        {{ logging(message="Configuration Error: timestamp_column is required and needs to be defined as"
        ~ " string literal or optional in model config:"
        ~ "\n  config ( timestamp_column='loaded_timestamp' )",
        level='ERROR', 
        model_id=model_id
        ) }}
        {{ return(false) }}
    {% endif %}

    {% if execute %}

        {# Cache handling #}
        {% set cache_key = '_max_ts_' ~ model_id | replace('.', '_') ~ ('_' ~ predicate | replace(' ', '_') if predicate is not none else '') %}
        {% set cache_value = get_cache_value(cache_key) %}
    
        {% if cache_value %}
            {{ logging(message="Resolved maximum timestamp from cache", model_id=model_id, status=cache_value | upper) }}
            {{ return("'" ~ cache_value ~ "'::timestamp") }}
        {% endif %}

        {# Warehouse allocation #}
        {% set warehouse = allocate_warehouse(warehouse_size) %}
        {% if not warehouse %}
            {{ logging(message="Failed to allocate warehouse", level='ERROR', model_id=model_id) }}
            {{ return(false) }}
        {% endif %}

        {# Get relation with validation #}
        {% set relation = adapter.get_relation(this.database, this.schema, model_name) if model_name is not none else this %}
        {% if not relation %}
            {{ logging(message="Relation not found: " ~ model_name, 
            level='ERROR', 
            model_id=model_id
            ) }}
            {{ return(false) }}
        {% endif %}

        {# Build and execute query #}
        {% set query %}
            /* Query generated by {{ macro_name }} macro */
            select coalesce(max({{ timestamp_column }}), '0'::timestamp) as max_ts
            from {{ relation }}
            {% if predicate %}
                where {{ predicate }}
            {% endif %}
        {% endset %}

        {# Set warehouse and execute query #}
        {% do run_query('use warehouse ' ~ warehouse) %}
        {% set result = run_query(query) %}
        {% do run_query('use warehouse ' ~ target.warehouse) %}

        {% if not result %}
            {{ logging(macro_name, message="Query execution failed", level='ERROR', model_id=model_id) }}
            {{ return(false) }}
        {% endif %}

        {# Process and validate result #}
        {% set timestamp = result.columns[0].values()[0] %}
        {% if timestamp is none %}
            {{ logging(message="No timestamp value returned", level='ERROR', model_id=model_id) }}
            {{ return(false) }}
        {% endif %}

        {# Cache and return result #}
        {{ logging(macro_name, message="Caching maximum timestamp '" ~ timestamp ~ "' with cache key '" ~ cache_key ~ "'", model_id=model_id, level='DEBUG') }}
        {% do var('_cache', {}).update({cache_key: timestamp}) %}
        {{ logging(message="Resolved maximum timestamp", model_id=model_id, status=timestamp) }}
        {{ return("'" ~ timestamp ~ "'::timestamp") }}

    {% endif %}

{% endmacro %}